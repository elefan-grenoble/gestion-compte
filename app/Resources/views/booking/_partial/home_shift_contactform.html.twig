{% set shifter = shift.shifter %}
<div id="contact{{ shift.id }}" class="modal modal-fixed-footer left-align">
    <div class="modal-content">
        <h5>Envoyer un mail aux membres du créneau <span class="{{ shift.job.color }}-text">{{ shift.job.name }}</span></h5>
        <h6>{{ shift.start|date_fr_long }} de {{ shift.start|date('G\\hi') }} à {{ shift.end|date('G\\hi') }}</h6>
        {{ form_start(form, {'attr': {'id': 'contactform'~shift.id}})}}
        <div class="row left-align">
            <div class="col s12">
                <div class="errors">
                    {{ form_errors(form.to) }}
                </div>
                {{ form_widget(form.to) }}
                {{ form_label(form.to) }}
                <div id="to{{ shift.id }}"></div>
            </div>
            <div class="col s12">
                <div class="errors">
                    {{ form_errors(form.message) }}
                </div>
                {{ form_label(form.message) }}
                {{ form_widget(form.message) }}
            </div>
        </div>
        {{ form_end(form) }}
    </div>
    <div class="modal-footer">
        <a href="#!" class=" modal-close waves-effect waves-green btn-flat red-text">Retour</a>
        <a href="#"
           class="modal-close waves-effect waves-green btn-flat teal white-text"
           onclick="javascript:$('#contactform{{ shift.id }}').submit();return false;"><i class="material-icons right">send</i>Envoyer</a>
    </div>
</div>
<script>
    function updateForm{{ shift.id}}() {
        var chipsData = M.Chips.getInstance($('#to{{ shift.id }}')).chipsData;
        var ids = chipsData.map((member) => (member['tag'].split(' ')[0].substring(1)));
        $("#contactform{{ shift.id }} input[name='form[to]']").val(JSON.stringify(ids));
    }
    function toto{{ shift.id }}() {
        var allMembers = [{% for shift in coShifts %}"#{{shift.shifter.id}} {{ shift.shifter.firstname|lower|capitalize }} {{ shift.shifter.lastname|first|upper }}",{% endfor %}];
        $('#to{{ shift.id }}').chips({
            autocompleteOptions: {
                data: allMembers.reduce(function(map, obj) {
                    map[obj] = null;
                    return map;
                }, {}),
            },
            data: allMembers.map((member) => ({tag: member})),
            onChipAdd: updateForm{{ shift.id}},
            onChipDelete: updateForm{{ shift.id}}
        });
        updateForm{{ shift.id}}();
    }
    setTimeout(toto{{ shift.id }},500);
</script>
