{% extends 'layout.html.twig' %}

{% block content %}
{{ form_start(form) }}

    <div class="row">
        <div class="input-field col s12 m6">
            {{ form_widget(form.from) }}
            {{ form_label(form.from) }}
        </div>
        <div class="input-field col s12 m6">
            {{ form_widget(form.template) }}
            {{ form_label(form.template) }}
        </div>
        <div class="col s12">
            <label>Destinataire(s)</label>
            <div class="beneficiaries chips ">
            </div>
        </div>
        <div class="col s12">
            <label>Non-membre(s) en copie</label>
            <div class="non-members chips ">
            </div>
        </div>
        <div class="input-field col s12">
            {{ form_widget(form.subject) }}
            {{ form_label(form.subject) }}
        </div>
        <div class="col s12">
            {{ form_label(form.message) }}
            {{ form_widget(form.message) }}
        </div>
        <div class="tips right small">
            pr√©nom : <input value="{{ '{{' }} beneficiary.firstname {{ '}}' }}"/>
        </div>
    </div>

    <button class="btn waves-effect waves-light" type="submit"><i class="material-icons left">send</i>Envoyer</button>
    {{ form_widget(form) }}
{{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    <script>
        jQuery(
            function() {
                function updateBeneficiaries() {
                    var chipsData = M.Chips.getInstance($('.beneficiaries')).chipsData;
                    var ids = chipsData.map((member) => member['tag']); // .split(' ')[0].substring(1)));
                    $("input[name='form[to]']").val(JSON.stringify(ids));
                };
                $.ajax({
                    type: 'GET',
                    url: '{{ path('mail_get_beneficiaries') }}',
                    success: function(response) {
                        var dataUsers = response.reduce(function(map, obj) {
                            map[obj] = null;
                            return map;
                        }, {});
                        $('.beneficiaries').chips({
                            placeholder: 'Beneficiaire',
                            data: [
                                {% for beneficiary in to %}
                                {
                                tag: "{{ beneficiary.displayNameWithMemberNumber }}",
                            },{% endfor %} ],
                            autocompleteOptions: {
                                data: dataUsers,
                                limit: Infinity,
                                minLength: 1
                            },
                            onChipAdd: updateBeneficiaries,
                            onChipDelete: updateBeneficiaries
                        });
                        updateBeneficiaries();
                    }
                });
                function updateNonMembers() {
                    var chipsData = M.Chips.getInstance($('.non-members')).chipsData;
                    var emails = chipsData.map((member) => (member['tag']));
                    $("input[name='form[cci]']").val(JSON.stringify(emails));
                };
                $.ajax({
                    type: 'GET',
                    url: '{{ path('mail_get_non_members') }}',
                    success: function(response) {
                        var dataUsers = response.reduce(function(map, obj) {
                            map[obj] = null;
                            return map;
                        }, {});
                        $('.non-members').chips({
                            placeholder: 'Non-membre',
                            data: [],
                            autocompleteOptions: {
                                data: dataUsers,
                                limit: Infinity,
                                minLength: 1
                            },
                            onChipAdd: updateNonMembers,
                            onChipDelete: updateNonMembers
                        });
                        updateNonMembers();
                    }
                });
            }
        );
    </script>

{% endblock %}
