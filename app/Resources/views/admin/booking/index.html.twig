{% extends 'layout.html.twig' %}

{% block title %}Administration des créneaux - {{ site_name }}{% endblock %}

{% block breadcrumbs %}
<a href="{{ path('homepage') }}"><i class="material-icons">home</i></a><i class="material-icons">chevron_right</i>
<a href="{{ path('admin') }}"><i class="material-icons">build</i>&nbsp;Administration</a><i class="material-icons">chevron_right</i>
<i class="material-icons">date_range</i>&nbsp;Administration des créneaux
{% endblock %}

{% block content %}
<div class="row center">
    <h4 class="header">Administration des créneaux</h4>
</div>

{# Filter form  --------- #}
<ul class="collapsible">
    <li>
        <div class="collapsible-header">
            <i class="material-icons">tune</i>Filtres
        </div>
        <div class="collapsible-body">
            {{ form_start(filterForm) }}
            <div class="row">
                <div class="input-field col m3">
                    {{ form_widget(filterForm.type, { 'id': 'SelectionTypeDropBox' }) }}
                    {{ form_label(filterForm.type) }}
                </div>
                <div id="dateSelectionType">
                    <div class="input-field col m3">
                        {{ form_widget(filterForm.from) }}
                        {{ form_label(filterForm.from) }}
                    </div>
                    <div class="input-field col m3">
                        {{ form_widget(filterForm.to) }}
                        {{ form_label(filterForm.to) }}
                    </div>
                </div>
                <div id="weekSelectionType">
                    <div class="input-field col m3">
                        {{ form_widget(filterForm.week) }}
                        {{ form_label(filterForm.week) }}
                    </div>
                    <div class="input-field col m3">
                        {{ form_widget(filterForm.year) }}
                        {{ form_label(filterForm.year) }}
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="input-field col m6">
                    {{ form_widget(filterForm.job) }}
                    {{ form_label(filterForm.job) }}
                </div>
                <div class="input-field col m6">
                    {{ form_widget(filterForm.filling) }}
                    {{ form_label(filterForm.filling) }}
                </div>
            </div>
            {{ form_widget(filterForm.filter) }}
        </div>
    </li>
</ul>
{{ form_end(filterForm) }}

{# Calendar hour line --------- #}
<div class="row">
    <div class="col m2 hide-on-small-only">
    </div>
    <div class="col s12 m10">
        <div style="display: flex;">
            {% for i in range(6, 22) %}
                <div style="flex: 1">
                    <div style="text-align: center;width: 100%;margin-left: -50%;">
                        {{ i }}h
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
</div>

{% include "admin/booking/_partial/bucket_calendar.html.twig" with { bucketsByDay: bucketsByDay } %}

{{ form_start(delete_bucket_form, { 'attr': { 'id': 'delete_bucket' }}) }}
{{ form_widget(delete_bucket_form) }}
{{ form_end(delete_bucket_form) }}
{% endblock %}

{% block stylesheets %}
{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function ($) {
            // for the filter form ------------------
            $('#SelectionTypeDropBox').on('change', function () {
                if (this.value === "0") {
                    $('#weekSelectionType').show();
                    $('#dateSelectionType').hide();
                } else {
                    $('#weekSelectionType').hide();
                    $('#dateSelectionType').show();
                }
            })
            .trigger('change');

            // for the bucket modification popup----------------
            $('input.autocomplete').autocomplete({
                data: {
                    {% for beneficiary in beneficiaries %}
                        "{{ beneficiary.autocompleteLabel }}": null,
                    {% endfor %}
                },
                // The max amount of results that
                // can be shown at once. Default: Infinity.
                limit: 10,
                onAutocomplete: function (val) {
                    // Callback function when value is autocomplete.
                    $('button.add').removeAttr('disabled');
                },
                // The minimum length of the input for
                // the autocomplete to start. Default: 1.
                minLength: 2,
            })
            .keydown(function () {
                $('button.add:not(:disabled)').attr('disabled', 'disabled');
            });
        })

        function postShift(shiftId) {
            {% if use_fly_and_fixed %}
            let selectedTypeService = document.querySelector('.checkedTypeService'+shiftId+':checked');
            {% else %}
            let selectedTypeService = document.querySelector('input[name="typeService'+shiftId+'"]');
            {% endif %}
            let selectedBenef = document.getElementById('benef'+shiftId);

            if (selectedTypeService != null && selectedBenef != null) {
                let url = "{{ path('admin_shift_book',{'id': 'tmpId'}) }}";
                url = url.replace("tmpId", shiftId);

                let body = {
                    "typeService": selectedTypeService.value,
                    "beneficiary": selectedBenef.value
                };

                // If using old IE version
                var xhttp = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");

                xhttp.open("POST", url, true);
                xhttp.onreadystatechange = function () {
                    if (xhttp.readyState > 3) {
                        if (200 <= xhttp.status && xhttp.status < 300) {
                            window.location.replace(xhttp.responseText);
                        } else {
                            alert("une erreur est survenue");
                        }
                    }
                };
                xhttp.send(JSON.stringify(body));
                return xhttp;
            }
        }
    </script>
{% endblock %}
