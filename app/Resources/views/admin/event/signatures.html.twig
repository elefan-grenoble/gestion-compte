{#########################################################################
 # Twig template for /Controller/EventController.php/signaturesListAction()
 #
 # @param beneficiaries: beneficiary entity for this line
 # @param event: The event entity object signature sheet
 #########################################################################}

{% block macro %}
    {#########################################################################
     # Compute and output the 2 last cells of a table_line depending on the beneficiary status.
     # @param beneficiary: beneficiary entity for this line
     # @param event: The event entity object signature sheet
     #########################################################################}
    {% macro sign_cells(beneficiary, event) %}
        {% if not beneficiary.isMain %}
            {# Not main benificiary, only one vote per memeber whatever the beneficiries number -----#}
            <td colspan="2" class="warning" style="background: gray; color: white;">
                Bénéficiaire de <strong>{{ beneficiary.membership.mainBeneficiary.displayName }}</strong>
            </td>

        {% elseif (beneficiary.membership.getTimeCount(event.maxDateOfLastRegistration) <= time_after_which_members_are_late_with_shifts * 60) %}
            {# this member is too late in his/her shifts cannot vote ---------------------------------- #}
            <td colspan="2" class="wrong" style="background: gray; color: white;">
                Compteur de créneaux à {{ beneficiary.membership.getTimeCount(event.maxDateOfLastRegistration) | duration_from_minutes }}
                <br />
                &#9888&nbsp;<strong>VOTE IMPOSSIBLE</strong>&nbsp;&#9888
            </td>

        {% elseif (event.proxiesByGiver(beneficiary.membership) | length > 0) %}
            {# This member designated a proxy to vote and is not the proxy ------------------------- #}
            {# first? only 1 proxy per member #}
            <td colspan="2" class="warning" style="background: gray; color: white;">
                Procuration donnée à
                <br />
                {% if event.proxiesByGiver(beneficiary.membership).first.owner.membership.mainBeneficiary %}
                    <strong>
                        {{ event.proxiesByGiver(beneficiary.membership).first.owner.membership.memberNumberWithBeneficiaryListString }}
                    </strong>
                {% else %}
                    Membre supprimé
                {% endif %}
            </td>

        {% else %}
            {# This beneficiary can vote ------------------------------------------------------------ #}
            <td></td>
            <td></td>
        {% endif %}
    {% endmacro sign_cells %}

    {#########################################################################
     # Compute and output a line for each beneficiary
     # @param beneficiary: beneficiary entity for this line
     # @param event: The event entity object signature sheet
     #########################################################################}
    {% macro table_line(beneficiary, event) %}
        <tr>
            <td {% if beneficiary.lastname | length > 12 %}class="smaller"{% endif %}>
                {{ beneficiary.lastname }}
                {% if (maximum_nb_of_beneficiaries_in_membership > 1) and beneficiary.isMain %}
                    {% for other_beneficiary in beneficiary.membership.beneficiaries %}
                        {% if other_beneficiary != beneficiary %}
                            <br />
                            <small>{{ other_beneficiary.lastname }}</small>
                        {% endif %}
                    {% endfor %}
                {% endif %}
            </td>
            <td {% if beneficiary.firstname | length > 12 %}class="smaller"{% endif %}>
                {{ beneficiary.firstname }}
                {% if (maximum_nb_of_beneficiaries_in_membership > 1) and beneficiary.isMain %}
                    {% for other_beneficiary in beneficiary.membership.beneficiaries %}
                        {% if other_beneficiary != beneficiary %}
                            <br />
                            <small>{{ other_beneficiary.firstname }}</small>
                        {% endif %}
                    {% endfor %}
                {% endif %}
            </td>
            <td class="center">#{{ beneficiary.membership.memberNumber }}</td>
            <td class="center date">{{ beneficiary.membership.lastRegistration.date | date('d/m/Y') }}</td>
            {{ _self.sign_cells(beneficiary, event) }}
        </tr>

        {# this beneficiary designated a proxy so generation of a additional line for this proxy to sign #}
        {% if ((event.proxiesByOwnerMembershipMainBeneficiary(beneficiary) | length) > 0) and (event.proxiesByOwnerMembershipMainBeneficiary(beneficiary).first.giver) %}
            {% for proxy in event.proxiesByOwnerMembershipMainBeneficiary(beneficiary) %}
                <tr>
                    <td>
                        <span class="smaller">&#8618;&nbsp;A une procuration pour</span>
                        <br />
                        {{ proxy.giver.mainBeneficiary.lastname }}
                        {% if maximum_nb_of_beneficiaries_in_membership > 1 %}
                            {% for other_beneficiary in proxy.giver.mainBeneficiary.membership.beneficiaries %}
                                {% if other_beneficiary != proxy.giver.mainBeneficiary %}
                                    <br />
                                    <small>{{ other_beneficiary.lastname }}</small>
                                {% endif %}
                            {% endfor %}
                        {% endif %}
                    </td>
                    <td>
                        {{ proxy.giver.mainBeneficiary.firstname }}
                        {% if maximum_nb_of_beneficiaries_in_membership > 1 %}
                            {% for other_beneficiary in proxy.giver.mainBeneficiary.membership.beneficiaries %}
                                {% if other_beneficiary != proxy.giver.mainBeneficiary %}
                                    <br />
                                    <small>{{ other_beneficiary.firstname }}</small>
                                {% endif %}
                            {% endfor %}
                        {% endif %}
                    </td>
                    <td class="center">#{{ proxy.giver.mainBeneficiary.memberNumber }}</td>
                    <td class="center">{{ proxy.giver.mainBeneficiary.membership.lastRegistration.date | date('d/m/Y') }}</td>

                {% if (proxy.giver.mainBeneficiary.membership.getTimeCount(event.maxDateOfLastRegistration) <= time_after_which_members_are_late_with_shifts * 60) %}
                    {# this member is too late in his/her shifts cannot vote ---------------------------------- #}
                    {# Todo: Maybe it should be put in the sign_cells macro #}
                    <td colspan="2" class="wrong" style="background: gray; color: white;">
                        Compteur de créneaux de #{{ proxy.giver.mainBeneficiary.memberNumber }} à {{ proxy.giver.mainBeneficiary.membership.getTimeCount(event.maxDateOfLastRegistration) | duration_from_minutes }}
                        <br />
                        &#9888&nbsp;<strong>VOTE IMPOSSIBLE</strong>&nbsp;&#9888
                    </td>
                {% else %}
                    <td></td>
                    <td></td>
                {% endif %}
                </tr>
            {% endfor %}
        {% endif %}
    {% endmacro table_line %}

    {#########################################################################
    # Output an header for the signature table
    #########################################################################}
    {% macro table_header() %}
        <thead>
            <tr>
                <th>Nom</th>
                <th>Prénom</th>
                <th class="center">#</th>
                <th class="center">Adhésion</th>
                <th>Signature</th>
                <th>Vote</th>
            </tr>
        </thead>
    {% endmacro table_header %}

    {#########################################################################
     # Compute and output the number of memeber that can vot for this event
     # @param beneficiaries: an array containing all the active memeber
     # @param event: The event entity object signature sheet
     #########################################################################}
    {% macro member_count(beneficiaries, event) %}
        {% set number_of_voters = 0 %}
        {% set number_of_proxy = 0 %}

        {% for beneficiary in beneficiaries %}
            {% set time_count_ok = not (beneficiary.membership.getTimeCount(event.maxDateOfLastRegistration) <= time_after_which_members_are_late_with_shifts * 60) %}

            {% if (event.proxiesByGiver(beneficiary.membership) | length > 0) and beneficiary.isMain %}
                {% set number_of_proxy = number_of_proxy + 1 %}
            {% endif %}

            {% if beneficiary.isMain and time_count_ok %}
                {% set number_of_voters = number_of_voters+1 %}
            {% endif %}
        {% endfor %}
        Nombre de votants : {{ number_of_voters }}
        <br />
        Nombre de procurations : {{ number_of_proxy }}
    {% endmacro member_count %}

{% endblock %}


<html lang="fr">
<head>
    <style>
        * {
            box-sizing: border-box;
            -moz-box-sizing: border-box;
        }

        body {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
            background-color: #FAFAFA;
            font-size: 12px;
            font-family: 'Calibri', sans-serif;
        }

        .title{
            font-size: 18px;
            padding-bottom: 20px;
            text-align: center;
        }

        .page_number {
            float: right;
            position: relative;
            top: 5mm;
            right: -5mm;
        }

        .page {
            width: 210mm;
            min-height: 297mm;
            padding: 20mm;
            margin: 10mm auto;
            border: 1px #D3D3D3 solid;
            border-radius: 5px;
            background: white;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        .subpage {
            height: 257mm;
        }

        .subpage table {
            width: 100%;
            border: 0;
            border-collapse: collapse;
        }

        .subpage th {
            background: white !important;
            border: 1px solid rgba(100, 100, 100, 0.25);
            text-align: center;
            font-size: 13px;
        }

        .subpage td {
            font-size: 13px;
            padding-left: 5px;
            border: 1px solid rgba(100, 100, 100, 0.25);
        }

        .subpage tr {
            height: 1cm;
        }

        .wrong {
            background: lightgray;
            color: black;
            text-align: center;
            font-size: 10px;
        }

        .warning {
            color: black;
            text-align: center;
            font-size: 10px;
        }

        .subpage td:nth-child(n+5):nth-last-child(-n+6) {
            border: 2px solid rgba(25, 25, 25, 1);
            width: 3cm;
            /*background: white;*/
        }

        .subpage tr:nth-child(even) {
            background: lightgray !important;
            -webkit-print-color-adjust: exact;
        }

        .date {
            font-size: 10px;
        }

        .smaller {
            font-size: 8px;
        }

        .center {
            text-align: center;
        }

        .letter td {
            font-size: 18px;
            padding: 2mm;
        }

        @page {
            size: A4;
            margin: 0;
        }

        @media print {
            html, body {
                width: 210mm;
                height: 297mm;
            }

            .page {
                margin: 0;
                border: initial;
                border-radius: initial;
                width: initial;
                min-height: initial;
                box-shadow: initial;
                background: initial;
                page-break-after: always;
            }

            tr:nth-child(even) {
                background: lightgray !important;
                -webkit-print-color-adjust: exact;
            }
        }

    </style>
    <title>Emargement pour {{ event.title() }} - {{ site_name }}</title>
    <link rel="icon" type="image/x-icon" href="{{ asset('favicon-lelefan.png') }}"/>
</head>
<body>
    <main class="book">
        <div class="page">
            <div class="subpage">
                <div class="title" id="main_title">
                    Liste des votants pour l'événement "{{ event.title() }}"
                    <span style="white-space: nowrap;">le {{ event.date | date('d F Y H:i') }}</span>
                    <br />
                    <small>généré le <span style="white-space: nowrap;">{{ "now" | date('d F Y H:i') }}</span></small>
                </div>
                <div class="center" id="member_count">
                    <p>{{ _self.member_count(beneficiaries, event) }}</p>
                </div>
                <table>
                    {# keep track of the number of line generated to make page break #}
                    {% set index = 2 %}
                    {# keep track of the number of page to write it in the footer #}
                    {% set page = 1 %}
                    {# keep track of the lastname letter for letter sub header #}
                    {% set letter = "a" %}

                    {% for beneficiary in beneficiaries %}
                    {# New letter sub header ------------------------- #}
                        {% if beneficiary.lastname|first != letter %}
                            {# sub table header for letter separation #}
                            {% set letter = beneficiary.lastname|first %}
                            <th colspan="6" class="letter">- {{ letter }} -</th>
                            {% set index = index + 3 %}
                            {{ _self.table_header() }}
                        {% endif %}

                        {# generate a benificiary line -------------------- #}
                        {{ _self.table_line(beneficiary, event) }}
                        {# if proxy, a line is added, so index++ ----------- #}
                        {% if ((event.proxiesByOwnerMembershipMainBeneficiary(beneficiary) | length) > 0) and (event.proxiesByOwnerMembershipMainBeneficiary(beneficiary).first.giver) %}
                            {% set index = index + 1 %}
                        {% endif %}
                        {% set index = index + 1 %}
                        {# new page or not--------------------------------- #}
                        {% if index > 23 %}
                            {# end the page an start a new one #}
                            {% set index = 0 %}

                </table>
            </div> {# closure tag for subpage #}
            <div class="page_number"> - <b>{{ page }}</b> -</div>
        </div>{# closure tag for page #}
        <div class="page">
            <div class="subpage">
                <table>
                            {{ _self.table_header() }}
                            {% set page = page + 1 %}

                        {% endif %}
                    {% endfor %}
                {# final closure #}
                </table>
            </div> {# closure tag for subpage #}
            <div class="page_number">- <b>{{ page }}</b> - </div>
        </div> {# closure tag for page #}
    </main>
    <script>
        window.print();
    </script>
</body>
</html>
