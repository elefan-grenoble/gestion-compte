imports:
    - { resource: config.yml }

framework:
    router:
        resource: '%kernel.root_dir%/config/routing_dev.yml'
        strict_requirements: true
    profiler: { only_exceptions: false }
    session:
        cookie_domain: "%router.request_context.host%"

web_profiler:
    toolbar: true
    intercept_redirects: false

monolog:
    handlers:
        main:
            type: stream
            path: '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
            channels: ['!event']
        mattermost:
            type: slackwebhook
            webhook_url: "%logging.mattermost.url%"
            channel: '%logging.mattermost.channel%'
            bot_name: 'Monolog'
            use_attachment: true,
            icon_emoji: ''
            use_short_attachment: true
            include_extra: true
            level: '%logging.mattermost.level%'
        console:
            type: console
            process_psr_3_messages: false
            channels: ['!event', '!doctrine', '!console']
        # To follow logs in real time, execute the following command:
        # `bin/console server:log -vv`
        server_log:
            type: server_log
            process_psr_3_messages: false
            host: 127.0.0.1:9911
        swiftmailer:
            type: swift_mailer
            from_email: '%transactional_mailer_user%'
            to_email: "@=parameter('logging.swiftmailer.recipient') ? parameter('logging.swiftmailer.recipient') : ''"
            subject: '%%level_name%% detected on %site_name% !'
            level: '%logging.swiftmailer.level%'
            formatter: monolog.formatter.html
            content_type: text/html
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type: firephp
        #    level: info
        #chromephp:
        #    type: chromephp
        #    level: info

#swiftmailer:
#    delivery_addresses: ['me@example.com']
