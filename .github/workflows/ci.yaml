name: Symfony 3.4 Tests

on: [push]

jobs:
  symfony:
    name: Symfony 3.4 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4']
    steps:
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@verbose
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

      # Composer
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        # https://help.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      # # https://github.com/sensiolabs/security-checker
      # - name: Security check installed dependencies
      #   uses: symfonycorp/security-checker-action@v2

      # # https://github.com/chekalsky/phpcs-action (community)
      # - name: Check PSR12 code style (PHP_CodeSniffer)
      #   uses: chekalsky/phpcs-action@v1.2.0
      #   with:
      #     enable_warnings: true
      #     installed_paths: '${{ github.workspace }}/vendor/squizlabs/php_codesniffer'
      #     phpcs_bin_path: './vendor/bin/phpcs src --ignore="Migrations/"'

      # https://github.com/phpmd/phpmd
      # - name: Analyses PHP Code (PHP Mess Detector)
      #  run: vendor/bin/phpmd src,tests text .phpmd-ruleset.xml

      # # https://github.com/phpstan/phpstan
      # - name: Analyse PHP Code (PHPStan)
      #   run: vendor/bin/phpstan analyse src

      # # Symfony
      # - name: Check the Symfony console
      #   run: |
      #     php bin/console -V
      #     php bin/console about

      # Tests
      - name: Run unit and functional tests
        run: |
          php bin/phpunit --stop-on-failure
